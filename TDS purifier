#include <Wire.h>
#include <Adafruit_SSD1306.h>

// OLED Display settings
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// TDS sensor settings
#define TDS_SENSOR_PIN 34   // TDS sensor analog pin (GPIO34)

// Calibration factor (you might need to adjust this depending on your sensor)
#define TDS_CALIBRATION_FACTOR 1.0   // Adjust this based on your sensor

void setup() {
  // Initialize Serial Monitor
  Serial.begin(115200);
  Serial.println("Initializing...");

  // Initialize OLED
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // I2C address is usually 0x3C
    Serial.println("SSD1306 initialization failed!");
    for (;;);
  }

  // Clear the display buffer
  display.clearDisplay();

  // Display a startup message
  display.setTextSize(1);         // Set text size (1 is default)
  display.setTextColor(SSD1306_WHITE); // Set text color
  display.setCursor(0, 0);        // Set cursor position
  display.println("Hello, ESP32!"); // Display text
  display.println("OLED + TDS Test");   // Additional text
  display.display();              // Update display with new text

  delay(2000); // Pause for 2 seconds

  // Initialize TDS sensor analog input
  analogReadResolution(12); // Set 12-bit resolution (0-4095 range for ESP32)
}

void loop() {
  // Read TDS sensor value (raw analog reading)
  int tdsRawValue = analogRead(TDS_SENSOR_PIN);
  
  // Convert to TDS value
  float tdsValue = tdsRawValue * TDS_CALIBRATION_FACTOR;

  // Display the TDS value on OLED
  display.clearDisplay();
  display.setCursor(0, 0);
  display.setTextSize(1); // Smaller text size
  display.println("TDS Level:");
  display.setTextSize(2); // Larger text size for the value
  display.print(tdsValue);
  display.println(" ppm"); // Display the TDS value in ppm (parts per million)
  display.display();       // Update display

  // Display another message for a while
  delay(1000);  // Update every 1 second
}
